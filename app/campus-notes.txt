//Font from Google.
import { Josefin_Sans } from "next/font/google"
const josefinSans = Josefin_Sans({ subsets: ["latin"] }) 
//Then interpolate in className as {josefinSans.className}

//CSS variables in tailwind. (Version 4.0 changes the notation.)
<div style={{'--primary-color': '#ff0000'}} className="bg-[var(--primary-color)]" />
※The tokens setup in tailwind will no take effect on portals generated outside!


Handy task order for markup: HTML → tokenSetup → pseudoColors → layout and gaps → sizing&spacing → typography → shadows and effects.

//Note: label will allow click for the radio button. Better than a div.

//This inside the centralization of images inside the app router.
 export { default as imageAngela } from './images/image-angela.jpg';

export { default as ... } from '...'	
You want quick, minimal re-exports with no need to manipulate

import ..., export {...}	
You want more flexibility, possible grouping, processing, or clarity

import data from './data.json' with { type: "json" }

 {/* The following snippet will full bleed the image, regadless of the container constraints */}
      {/* .full-width {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
} */}
----------------
